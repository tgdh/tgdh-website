@inherits UmbracoViewPage<ImageViewModel>
@{
    var image = Umbraco.TypedMedia(Model.ImageId);

    if (image == null)
    {
        return;
    }

    @* aspect ratio *@
    var hasRatio = !string.IsNullOrEmpty(Model.AspectRatio);
    var aspectRatio = hasRatio ? Model.AspectRatio : null;
    var aspectRatioClass = hasRatio ? "o-aspect--" + aspectRatio.Replace(":", "-") : "";

        @* alignment *@
    var alignment = !string.IsNullOrEmpty(Model.Alignment) ? Model.Alignment.ToLower() : "default";
    if (alignment == "full width")
    {
        alignment = "full";
		Model.AdditionalClass = Model.AdditionalClass + " o-page-component";
    }
    var alignmentClass = "o-align--" + alignment;

	@* images *@
    var imageWidth = alignment != "default" ? Model.ImageWidth / 2 : Model.ImageWidth;
    var imageUrlLow = Url.GetCropUrl(image, cropAlias: aspectRatio, width: imageWidth, quality: 18, htmlEncode: false).ToString();
    var imageUrlHigh = Url.GetCropUrl(image, cropAlias: aspectRatio, width: imageWidth, quality: 100, htmlEncode: false).ToString();

    var caption = image.GetPropertyValue<string>("caption");
    var altText = image.GetPropertyValue<string>("altText");
}

<figure class="o-media @alignmentClass @Model.AdditionalClass">
	<div class="@aspectRatioClass">
    	<img class="o-media__image js-lazyload" src="@imageUrlLow" data-src="@imageUrlHigh" alt="@altText" />
	</div>
    @if (!string.IsNullOrEmpty(caption))
    {
        <figcaption class="c-caption">@caption</figcaption>
    }
</figure>
