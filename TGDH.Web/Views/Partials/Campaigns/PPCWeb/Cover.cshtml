@using TGDH.Core.Models
@using TGDH.Core.ExtensionMethods
@inherits UmbracoViewPage<IPublishedContent>
@{
	var imageId = IntExtensionMethods.GetRandomIntFromStringIds(Model.GetPropertyValue<string>("coverImageIds"));
    var image = Umbraco.TypedMedia(imageId);

    if (image == null)
    {
        return;
    }

	var headline = Model.GetPropertyValue<string>("coverHeadline");

}

<section class="c-cover u-clearfix">
	@RenderImage(image)
	<div class="c-cover__content o-wrap">
		<div class="c-cover__copy">
			<header class="c-cover__heading">
				@if(!String.IsNullOrWhiteSpace(headline)) {
					<h1 class="c-cover__headline">@headline</h1>
				}
			</header>
			@if(Model.HasValue("coverCopy")) {
				<div class="c-cover__body u-space-top">
					@Model.GetPropertyValue("coverCopy")

					<div class="u-space-top">
						@Html.Partial("~/Views/Partials/Forms/CallbackFormView.cshtml", new CallbackForm
						{
							PageName = "PPC campaign - web"
						})
					</div>
				</div>
			}
		</div>
	</div>
</section>


@helper RenderImage(IPublishedContent image) {
	var altText = image.GetPropertyValue<string>("altText");

	string smallImageUrl = Url.GetCropUrl(
		image,
		cropAlias: "1:1",
		width: 800,
		htmlEncode: false
	).ToString();

	string mediumImageUrl = Url.GetCropUrl(
		image,
		cropAlias: "16:9",
		width: 800,
		htmlEncode: false
	).ToString();

	string largeImageUrl = Url.GetCropUrl(image,
		cropAlias: "5:54",
		width: 600,
		htmlEncode: false
	).ToString();

	string xLargeImageUrl = Url.GetCropUrl(
		image,
		cropAlias: "5:54",
		width: 700,
		htmlEncode: false
	).ToString();

	string xxLargeImageUrl = Url.GetCropUrl(image,
		cropAlias: "5:54",
		width: 900,
		htmlEncode: false
	).ToString();

	string xxxLargeImageUrl = Url.GetCropUrl(
		image,
		cropAlias: "5:54",
		width: 1200,
		htmlEncode: false
	).ToString();

	<div class="c-cover__media">
		<div class="c-cover__decoration" role="presentation"></div>
		<picture class="c-cover__media-wrap">
			<!--[if IE 9]><video style="display: none;"><![endif]-->
			<source srcset="@xxxLargeImageUrl" data-srcset="@xxxLargeImageUrl" media="(min-width: 1800px)">
			<source srcset="@xxLargeImageUrl" data-srcset="@xxLargeImageUrl" media="(min-width: 1500px)">
			<source srcset="@xLargeImageUrl" data-srcset="@xLargeImageUrl" media="(min-width: 1280px)">
			<source srcset="@largeImageUrl" data-srcset="@largeImageUrl" media="(min-width: 800px)">
			<source srcset="@mediumImageUrl" data-srcset="@mediumImageUrl" media="(min-width: 600px)">
			<source srcset="@smallImageUrl" data-srcset="@smallImageUrl" media="(max-width: 599px)">
			<!--[if IE 9]></video><![endif]-->
			<img src="@xLargeImageUrl&quality=18" data-src="@xLargeImageUrl" alt="@altText" class="c-cover__image js-lazyload" alt="@altText">
		</picture>
	</div>
}
