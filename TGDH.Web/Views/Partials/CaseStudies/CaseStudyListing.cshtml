@inherits UmbracoViewPage<IPublishedContent>
@{
	var selection = Model.Children().Where( x => x.IsVisible());
	if( !selection.Any() ) {
		return;
	}
}

<div class="c-tile-wrap u-clearfix">
	@foreach( var item in selection ) {
		var imageId = item.GetPropertyValue<int>("coverImage");
		if( imageId == 0 ) {
			imageId = item.GetPropertyValue<int>("pageImage");
		}
		var quote = Umbraco.StripHtml(item.GetPropertyValue<IHtmlString>("quote"));

		var tileData = new TileViewModel {
			Url = item.Url,
			Headline = item.Name,
			Subtitle = item.GetPropertyValue<IHtmlString>("coverSubtitle"),
			ImageId = imageId,
			Quote = quote.ToString()
		};
		@Html.Partial("~/Views/Partials/Components/Tile.cshtml", tileData)
	}

	@{
		if( selection.Count() % 2 == 1 ) {
			var featuredPage = Umbraco.TypedContent(Model.GetPropertyValue<int>("featuredPage"));
			if(featuredPage != null)  {
				@*
				var imageId = featuredPage.GetPropertyValue<int>("coverImage");
				if( imageId == 0 ) {
					imageId = featuredPage.GetPropertyValue<int>("pageImage");
				}
				*@
				var tileData = new TileViewModel {
					Url = featuredPage.Url,
					Headline = featuredPage.Name,
					Subtitle = featuredPage.GetPropertyValue<IHtmlString>("coverSubtitle"),
					ModifierClass = "u-hide--small u-hide--medium"
				};
				@Html.Partial("~/Views/Partials/Components/Tile.cshtml", tileData)
			}
		}
	}
</div>
